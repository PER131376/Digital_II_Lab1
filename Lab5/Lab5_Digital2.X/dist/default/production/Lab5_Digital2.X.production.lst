

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Aug 19 00:09:03 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293                           
   294                           	psect	strings
   295  0200                     __pstrings:
   296  0200                     stringtab:
   297  0200                     __stringtab:
   298  0200                     stringcode:	
   299                           ;	String table - string pointers are 1 byte each
   300                           
   301  0200                     stringdir:
   302  0200  3002               	movlw	high stringdir
   303  0201  008A               	movwf	10
   304  0202  0804               	movf	4,w
   305  0203  0A84               	incf	4,f
   306  0204  0782               	addwf	2,f
   307  0205                     __stringbase:
   308  0205  3400               	retlw	0
   309  0206                     __end_of__stringtab:
   310  0206                     _dpowers:
   311  0206  3401               	retlw	1
   312  0207  3400               	retlw	0
   313  0208  340A               	retlw	10
   314  0209  3400               	retlw	0
   315  020A  3464               	retlw	100
   316  020B  3400               	retlw	0
   317  020C  34E8               	retlw	232
   318  020D  3403               	retlw	3
   319  020E  3410               	retlw	16
   320  020F  3427               	retlw	39
   321  0210                     __end_of_dpowers:
   322  0018                     _RCSTAbits	set	24
   323  0019                     _TXREG	set	25
   324  0007                     _PORTCbits	set	7
   325  0006                     _PORTB	set	6
   326  0009                     _PORTE	set	9
   327  001A                     _RCREG	set	26
   328  0005                     _PORTA	set	5
   329  000C                     _PIR1bits	set	12
   330  000B                     _INTCONbits	set	11
   331  0008                     _PORTD	set	8
   332  0064                     _TXIF	set	100
   333  0031                     _RB1	set	49
   334  0030                     _RB0	set	48
   335  0058                     _RBIF	set	88
   336  009A                     _SPBRGH	set	154
   337  0099                     _SPBRG	set	153
   338  0098                     _TXSTAbits	set	152
   339  008C                     _PIE1bits	set	140
   340  008F                     _OSCCONbits	set	143
   341  0096                     _IOCBbits	set	150
   342  0095                     _WPUB	set	149
   343  0081                     _OPTION_REGbits	set	129
   344  0088                     _TRISD	set	136
   345  0086                     _TRISB	set	134
   346  0085                     _TRISA	set	133
   347  0089                     _TRISE	set	137
   348  0187                     _BAUDCTLbits	set	391
   349  0189                     _ANSELH	set	393
   350  0188                     _ANSEL	set	392
   351  0210                     STR_1:
   352  0210  340D               	retlw	13
   353  0211  3420               	retlw	32	;' '
   354  0212  3443               	retlw	67	;'C'
   355  0213  346F               	retlw	111	;'o'
   356  0214  346E               	retlw	110	;'n'
   357  0215  3474               	retlw	116	;'t'
   358  0216  3461               	retlw	97	;'a'
   359  0217  3464               	retlw	100	;'d'
   360  0218  346F               	retlw	111	;'o'
   361  0219  3472               	retlw	114	;'r'
   362  021A  343D               	retlw	61	;'='
   363  021B  3425               	retlw	37	;'%'
   364  021C  3464               	retlw	100	;'d'
   365  021D  340A               	retlw	10
   366  021E  3400               	retlw	0
   367  021F                     STR_2:
   368  021F  340A               	retlw	10
   369  0220  3420               	retlw	32	;' '
   370  0221  3456               	retlw	86	;'V'
   371  0222  345F               	retlw	95	;'_'
   372  0223  3450               	retlw	80	;'P'
   373  0224  3443               	retlw	67	;'C'
   374  0225  343D               	retlw	61	;'='
   375  0226  3425               	retlw	37	;'%'
   376  0227  3464               	retlw	100	;'d'
   377  0228  3400               	retlw	0
   378                           
   379                           	psect	cinit
   380  000F                     start_initialization:	
   381                           ; #config settings
   382                           
   383  000F                     __initialization:
   384                           
   385                           ; Clear objects allocated to COMMON
   386  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   387  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   388                           
   389                           ; Clear objects allocated to BANK0
   390  0011  1383               	bcf	3,7	;select IRP bank0
   391  0012  3020               	movlw	low __pbssBANK0
   392  0013  0084               	movwf	4
   393  0014  303E               	movlw	low (__pbssBANK0+30)
   394  0015  120A  118A  22A3  120A  118A  	fcall	clear_ram0
   395  001A                     end_of_initialization:	
   396                           ;End of C runtime variable initialization code
   397                           
   398  001A                     __end_of__initialization:
   399  001A  0183               	clrf	3
   400  001B  120A  118A  2A6A   	ljmp	_main	;jump to C main() function
   401                           
   402                           	psect	bssCOMMON
   403  0079                     __pbssCOMMON:
   404  0079                     _Cm:
   405  0079                     	ds	2
   406                           
   407                           	psect	bssBANK0
   408  0020                     __pbssBANK0:
   409  0020                     _V2:
   410  0020                     	ds	4
   411  0024                     _V1:
   412  0024                     	ds	4
   413  0028                     _Cont:
   414  0028                     	ds	1
   415  0029                     _PC:
   416  0029                     	ds	1
   417  002A                     _s:
   418  002A                     	ds	20
   419                           
   420                           	psect	clrtext
   421  02A3                     clear_ram0:	
   422                           ;	Called with FSR containing the base address, and
   423                           ;	W with the last address+1
   424                           
   425  02A3  0064               	clrwdt	;clear the watchdog before getting into this loop
   426  02A4                     clrloop0:
   427  02A4  0180               	clrf	0	;clear RAM location pointed to by FSR
   428  02A5  0A84               	incf	4,f	;increment pointer
   429  02A6  0604               	xorwf	4,w	;XOR with final address
   430  02A7  1903               	btfsc	3,2	;have we reached the end yet?
   431  02A8  3400               	retlw	0	;all done for this memory range, return
   432  02A9  0604               	xorwf	4,w	;XOR again to restore value
   433  02AA  2AA4               	goto	clrloop0	;do the next byte
   434                           
   435                           	psect	cstackCOMMON
   436  0070                     __pcstackCOMMON:
   437  0070                     ?_setup:
   438  0070                     ?_valorsensores:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_configuracionUART:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_isr:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ??_isr:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_main:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_Envio_caracter:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_cadena_caracteres:	
   457                           ; 1 bytes @ 0x0
   458                           
   459                           
   460                           ; 1 bytes @ 0x0
   461  0070                     	ds	3
   462  0073                     ??_setup:
   463  0073                     ??_configuracionUART:	
   464                           ; 1 bytes @ 0x3
   465                           
   466  0073                     ??_Envio_caracter:	
   467                           ; 1 bytes @ 0x3
   468                           
   469  0073                     ?___lwdiv:	
   470                           ; 1 bytes @ 0x3
   471                           
   472  0073                     Envio_caracter@caracter:	
   473                           ; 2 bytes @ 0x3
   474                           
   475  0073                     ___lwdiv@divisor:	
   476                           ; 1 bytes @ 0x3
   477                           
   478                           
   479                           ; 2 bytes @ 0x3
   480  0073                     	ds	1
   481  0074                     ??_cadena_caracteres:
   482                           
   483                           ; 1 bytes @ 0x4
   484  0074                     	ds	1
   485  0075                     cadena_caracteres@i:
   486  0075                     ___lwdiv@dividend:	
   487                           ; 2 bytes @ 0x5
   488                           
   489                           
   490                           ; 2 bytes @ 0x5
   491  0075                     	ds	2
   492  0077                     ??___lwdiv:
   493  0077                     cadena_caracteres@st:	
   494                           ; 1 bytes @ 0x7
   495                           
   496                           
   497                           ; 1 bytes @ 0x7
   498  0077                     	ds	1
   499  0078                     ??___lwmod:
   500                           
   501                           ; 1 bytes @ 0x8
   502  0078                     	ds	1
   503                           
   504                           	psect	cstackBANK0
   505  003E                     __pcstackBANK0:
   506  003E                     ___lwdiv@counter:
   507                           
   508                           ; 1 bytes @ 0x0
   509  003E                     	ds	1
   510  003F                     ___lwdiv@quotient:
   511                           
   512                           ; 2 bytes @ 0x1
   513  003F                     	ds	2
   514  0041                     ?___lwmod:
   515  0041                     ___lwmod@divisor:	
   516                           ; 2 bytes @ 0x3
   517                           
   518                           
   519                           ; 2 bytes @ 0x3
   520  0041                     	ds	2
   521  0043                     ___lwmod@dividend:
   522                           
   523                           ; 2 bytes @ 0x5
   524  0043                     	ds	2
   525  0045                     ___lwmod@counter:
   526                           
   527                           ; 1 bytes @ 0x7
   528  0045                     	ds	1
   529  0046                     ?_sprintf:
   530  0046                     sprintf@f:	
   531                           ; 2 bytes @ 0x8
   532                           
   533                           
   534                           ; 1 bytes @ 0x8
   535  0046                     	ds	3
   536  0049                     ??_sprintf:
   537                           
   538                           ; 1 bytes @ 0xB
   539  0049                     	ds	3
   540  004C                     sprintf@ap:
   541                           
   542                           ; 1 bytes @ 0xE
   543  004C                     	ds	1
   544  004D                     sprintf@flag:
   545                           
   546                           ; 1 bytes @ 0xF
   547  004D                     	ds	1
   548  004E                     sprintf@prec:
   549                           
   550                           ; 1 bytes @ 0x10
   551  004E                     	ds	1
   552  004F                     sprintf@val:
   553                           
   554                           ; 2 bytes @ 0x11
   555  004F                     	ds	2
   556  0051                     sprintf@sp:
   557                           
   558                           ; 1 bytes @ 0x13
   559  0051                     	ds	1
   560  0052                     sprintf@c:
   561                           
   562                           ; 1 bytes @ 0x14
   563  0052                     	ds	1
   564  0053                     ??_valorsensores:
   565                           
   566                           ; 1 bytes @ 0x15
   567  0053                     	ds	3
   568  0056                     ??_main:
   569                           
   570                           ; 1 bytes @ 0x18
   571  0056                     	ds	1
   572                           
   573                           	psect	maintext
   574  026A                     __pmaintext:	
   575 ;;
   576 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   577 ;;
   578 ;; *************** function _main *****************
   579 ;; Defined at:
   580 ;;		line 62 in file "Main_Lab5.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   589 ;; Tracked objects:
   590 ;;		On entry : B00/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   594 ;;      Params:         0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0
   596 ;;      Temps:          0       1       0       0       0
   597 ;;      Totals:         0       1       0       0       0
   598 ;;Total ram usage:        1 bytes
   599 ;; Hardware stack levels required when called:    4
   600 ;; This function calls:
   601 ;;		_setup
   602 ;;		_valorsensores
   603 ;; This function is called by:
   604 ;;		Startup code after reset
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608                           
   609                           ;psect for function _main
   610  026A                     _main:
   611  026A                     l1318:	
   612                           ;incstack = 0
   613                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   614                           
   615                           
   616                           ;Main_Lab5.c: 63:     setup();
   617  026A  120A  118A  21BD  120A  118A  	fcall	_setup
   618  026F                     l1320:
   619                           
   620                           ;Main_Lab5.c: 67:         if (PIR1bits.RCIF)
   621  026F  1283               	bcf	3,5	;RP0=0, select bank0
   622  0270  1303               	bcf	3,6	;RP1=0, select bank0
   623  0271  1E8C               	btfss	12,5	;volatile
   624  0272  2A74               	goto	u731
   625  0273  2A75               	goto	u730
   626  0274                     u731:
   627  0274  2A7B               	goto	l1324
   628  0275                     u730:
   629  0275                     l1322:
   630                           
   631                           ;Main_Lab5.c: 68:         {;Main_Lab5.c: 69:             PORTA = RCREG;
   632  0275  081A               	movf	26,w	;volatile
   633  0276  0085               	movwf	5	;volatile
   634                           
   635                           ;Main_Lab5.c: 70:             PC = PORTA;
   636  0277  0805               	movf	5,w	;volatile
   637  0278  00D6               	movwf	??_main
   638  0279  0856               	movf	??_main,w
   639  027A  00A9               	movwf	_PC
   640  027B                     l1324:
   641                           
   642                           ;Main_Lab5.c: 73:         valorsensores();
   643  027B  120A  118A  218A  120A  118A  	fcall	_valorsensores
   644  0280  2A6F               	goto	l1320
   645  0281  120A  118A  280C   	ljmp	start
   646  0284                     __end_of_main:
   647                           
   648                           	psect	text1
   649  018A                     __ptext1:	
   650 ;; *************** function _valorsensores *****************
   651 ;; Defined at:
   652 ;;		line 58 in file "UART5.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   666 ;;      Params:         0       0       0       0       0
   667 ;;      Locals:         0       0       0       0       0
   668 ;;      Temps:          0       3       0       0       0
   669 ;;      Totals:         0       3       0       0       0
   670 ;;Total ram usage:        3 bytes
   671 ;; Hardware stack levels used:    1
   672 ;; Hardware stack levels required when called:    3
   673 ;; This function calls:
   674 ;;		_cadena_caracteres
   675 ;;		_sprintf
   676 ;; This function is called by:
   677 ;;		_main
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           
   682                           ;psect for function _valorsensores
   683  018A                     _valorsensores:
   684  018A                     l1312:	
   685                           ;incstack = 0
   686                           ; Regs used in _valorsensores: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   687                           
   688                           
   689                           ;UART5.c: 60:     sprintf(s, "\r Contador=%d\n",Cont);
   690  018A  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   691  018B  1283               	bcf	3,5	;RP0=0, select bank0
   692  018C  1303               	bcf	3,6	;RP1=0, select bank0
   693  018D  00D3               	movwf	??_valorsensores
   694  018E  0853               	movf	??_valorsensores,w
   695  018F  00C6               	movwf	sprintf@f
   696  0190  0828               	movf	_Cont,w
   697  0191  00D4               	movwf	??_valorsensores+1
   698  0192  01D5               	clrf	??_valorsensores+2
   699  0193  0854               	movf	??_valorsensores+1,w
   700  0194  00C7               	movwf	?_sprintf+1
   701  0195  0855               	movf	??_valorsensores+2,w
   702  0196  00C8               	movwf	?_sprintf+2
   703  0197  302A               	movlw	(low (_s| 0))& (0+255)
   704  0198  120A  118A  201E  120A  118A  	fcall	_sprintf
   705  019D                     l1314:
   706                           
   707                           ;UART5.c: 61:     cadena_caracteres(s);
   708  019D  302A               	movlw	(low (_s| 0))& (0+255)
   709  019E  120A  118A  2229  120A  118A  	fcall	_cadena_caracteres
   710  01A3                     l1316:
   711                           
   712                           ;UART5.c: 63:     sprintf(s, "\n V_PC=%d", PC);
   713  01A3  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   714  01A4  1283               	bcf	3,5	;RP0=0, select bank0
   715  01A5  1303               	bcf	3,6	;RP1=0, select bank0
   716  01A6  00D3               	movwf	??_valorsensores
   717  01A7  0853               	movf	??_valorsensores,w
   718  01A8  00C6               	movwf	sprintf@f
   719  01A9  0829               	movf	_PC,w
   720  01AA  00D4               	movwf	??_valorsensores+1
   721  01AB  01D5               	clrf	??_valorsensores+2
   722  01AC  0854               	movf	??_valorsensores+1,w
   723  01AD  00C7               	movwf	?_sprintf+1
   724  01AE  0855               	movf	??_valorsensores+2,w
   725  01AF  00C8               	movwf	?_sprintf+2
   726  01B0  302A               	movlw	(low (_s| 0))& (0+255)
   727  01B1  120A  118A  201E  120A  118A  	fcall	_sprintf
   728                           
   729                           ;UART5.c: 64:     cadena_caracteres(s);
   730  01B6  302A               	movlw	(low (_s| 0))& (0+255)
   731  01B7  120A  118A  2229  120A  118A  	fcall	_cadena_caracteres
   732  01BC                     l122:
   733  01BC  0008               	return
   734  01BD                     __end_of_valorsensores:
   735                           
   736                           	psect	text2
   737  001E                     __ptext2:	
   738 ;; *************** function _sprintf *****************
   739 ;; Defined at:
   740 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;  sp              1    wreg     PTR unsigned char 
   743 ;;		 -> s(20), 
   744 ;;  f               1    8[BANK0 ] PTR const unsigned char 
   745 ;;		 -> STR_2(10), STR_1(15), 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  sp              1   19[BANK0 ] PTR unsigned char 
   748 ;;		 -> s(20), 
   749 ;;  tmpval          4    0        struct .
   750 ;;  val             2   17[BANK0 ] unsigned int 
   751 ;;  cp              2    0        PTR const unsigned char 
   752 ;;  len             2    0        unsigned int 
   753 ;;  c               1   20[BANK0 ] unsigned char 
   754 ;;  prec            1   16[BANK0 ] char 
   755 ;;  flag            1   15[BANK0 ] unsigned char 
   756 ;;  ap              1   14[BANK0 ] PTR void [1]
   757 ;;		 -> ?_sprintf(2), 
   758 ;; Return value:  Size  Location     Type
   759 ;;                  2    8[BANK0 ] int 
   760 ;; Registers used:
   761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   767 ;;      Params:         0       3       0       0       0
   768 ;;      Locals:         0       7       0       0       0
   769 ;;      Temps:          0       3       0       0       0
   770 ;;      Totals:         0      13       0       0       0
   771 ;;Total ram usage:       13 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; Hardware stack levels required when called:    2
   774 ;; This function calls:
   775 ;;		___lwdiv
   776 ;;		___lwmod
   777 ;; This function is called by:
   778 ;;		_valorsensores
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           
   783                           ;psect for function _sprintf
   784  001E                     _sprintf:
   785                           
   786                           ;incstack = 0
   787                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   788                           ;sprintf@sp stored from wreg
   789  001E  1283               	bcf	3,5	;RP0=0, select bank0
   790  001F  1303               	bcf	3,6	;RP1=0, select bank0
   791  0020  00D1               	movwf	sprintf@sp
   792  0021                     l1250:
   793                           
   794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   795  0021  3047               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   796  0022  00C9               	movwf	??_sprintf
   797  0023  0849               	movf	??_sprintf,w
   798  0024  00CC               	movwf	sprintf@ap
   799                           
   800                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   801  0025  28F1               	goto	l1302
   802  0026                     l1252:
   803                           
   804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   805  0026  3025               	movlw	37
   806  0027  0652               	xorwf	sprintf@c,w
   807  0028  1903               	btfsc	3,2
   808  0029  282B               	goto	u661
   809  002A  282C               	goto	u660
   810  002B                     u661:
   811  002B  2838               	goto	l1258
   812  002C                     u660:
   813  002C                     l1254:
   814                           
   815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   816  002C  0852               	movf	sprintf@c,w
   817  002D  00C9               	movwf	??_sprintf
   818  002E  0851               	movf	sprintf@sp,w
   819  002F  0084               	movwf	4
   820  0030  0849               	movf	??_sprintf,w
   821  0031  1383               	bcf	3,7	;select IRP bank0
   822  0032  0080               	movwf	0
   823  0033                     l1256:
   824  0033  3001               	movlw	1
   825  0034  00C9               	movwf	??_sprintf
   826  0035  0849               	movf	??_sprintf,w
   827  0036  07D1               	addwf	sprintf@sp,f
   828                           
   829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
   830  0037  28F1               	goto	l1302
   831  0038                     l1258:
   832                           
   833                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   834  0038  01CD               	clrf	sprintf@flag
   835  0039                     l1262:	
   836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   837                           
   838  0039  3001               	movlw	1
   839  003A  07C6               	addwf	sprintf@f,f
   840  003B  30FF               	movlw	-1
   841  003C  0746               	addwf	sprintf@f,w
   842  003D  0084               	movwf	4
   843  003E  120A  118A  2200  120A  118A  	fcall	stringdir
   844  0043  00D2               	movwf	sprintf@c
   845  0044  00C9               	movwf	??_sprintf
   846  0045  01CA               	clrf	??_sprintf+1
   847                           
   848                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   849                           ; Switch size 1, requested type "simple"
   850                           ; Number of cases is 1, Range of values is 0 to 0
   851                           ; switch strategies available:
   852                           ; Name         Instructions Cycles
   853                           ; simple_byte            4     3 (average)
   854                           ; direct_byte           11     8 (fixed)
   855                           ; jumptable            260     6 (fixed)
   856                           ;	Chosen strategy is simple_byte
   857  0046  084A               	movf	??_sprintf+1,w
   858  0047  3A00               	xorlw	0	; case 0
   859  0048  1903               	skipnz
   860  0049  284B               	goto	l1346
   861  004A  28F1               	goto	l1302
   862  004B                     l1346:
   863                           
   864                           ; Switch size 1, requested type "simple"
   865                           ; Number of cases is 3, Range of values is 0 to 105
   866                           ; switch strategies available:
   867                           ; Name         Instructions Cycles
   868                           ; simple_byte           10     6 (average)
   869                           ; jumptable            260     6 (fixed)
   870                           ;	Chosen strategy is simple_byte
   871  004B  0849               	movf	??_sprintf,w
   872  004C  3A00               	xorlw	0	; case 0
   873  004D  1903               	skipnz
   874  004E  2903               	goto	l1304
   875  004F  3A64               	xorlw	100	; case 100
   876  0050  1903               	skipnz
   877  0051  2856               	goto	l1264
   878  0052  3A0D               	xorlw	13	; case 105
   879  0053  1903               	skipnz
   880  0054  2856               	goto	l1264
   881  0055  28F1               	goto	l1302
   882  0056                     l1264:
   883                           
   884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
   885  0056  084C               	movf	sprintf@ap,w
   886  0057  0084               	movwf	4
   887  0058  1383               	bcf	3,7	;select IRP bank0
   888  0059  0800               	movf	0,w
   889  005A  00CF               	movwf	sprintf@val
   890  005B  0A84               	incf	4,f
   891  005C  0800               	movf	0,w
   892  005D  00D0               	movwf	sprintf@val+1
   893  005E                     l1266:
   894  005E  3002               	movlw	2
   895  005F  00C9               	movwf	??_sprintf
   896  0060  0849               	movf	??_sprintf,w
   897  0061  07CC               	addwf	sprintf@ap,f
   898  0062                     l1268:
   899                           
   900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
   901  0062  1FD0               	btfss	sprintf@val+1,7
   902  0063  2865               	goto	u671
   903  0064  2866               	goto	u670
   904  0065                     u671:
   905  0065  286F               	goto	l1274
   906  0066                     u670:
   907  0066                     l1270:
   908                           
   909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
   910  0066  3003               	movlw	3
   911  0067  00C9               	movwf	??_sprintf
   912  0068  0849               	movf	??_sprintf,w
   913  0069  04CD               	iorwf	sprintf@flag,f
   914  006A                     l1272:
   915                           
   916                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
   917  006A  09CF               	comf	sprintf@val,f
   918  006B  09D0               	comf	sprintf@val+1,f
   919  006C  0ACF               	incf	sprintf@val,f
   920  006D  1903               	skipnz
   921  006E  0AD0               	incf	sprintf@val+1,f
   922  006F                     l1274:
   923                           
   924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
   925  006F  01D2               	clrf	sprintf@c
   926  0070  0AD2               	incf	sprintf@c,f
   927  0071                     l1280:
   928                           
   929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
   930  0071  0852               	movf	sprintf@c,w
   931  0072  00C9               	movwf	??_sprintf
   932  0073  0749               	addwf	??_sprintf,w
   933  0074  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   934  0075  0084               	movwf	4
   935  0076  120A  118A  2200  120A  118A  	fcall	stringdir
   936  007B  00CA               	movwf	??_sprintf+1
   937  007C  120A  118A  2200  120A  118A  	fcall	stringdir
   938  0081  00CB               	movwf	??_sprintf+2
   939  0082  084B               	movf	??_sprintf+2,w
   940  0083  0250               	subwf	sprintf@val+1,w
   941  0084  1D03               	skipz
   942  0085  2888               	goto	u685
   943  0086  084A               	movf	??_sprintf+1,w
   944  0087  024F               	subwf	sprintf@val,w
   945  0088                     u685:
   946  0088  1803               	skipnc
   947  0089  288B               	goto	u681
   948  008A  288C               	goto	u680
   949  008B                     u681:
   950  008B  288D               	goto	l1284
   951  008C                     u680:
   952  008C  2897               	goto	l1286
   953  008D                     l1284:
   954  008D  3001               	movlw	1
   955  008E  00C9               	movwf	??_sprintf
   956  008F  0849               	movf	??_sprintf,w
   957  0090  07D2               	addwf	sprintf@c,f
   958  0091  3005               	movlw	5
   959  0092  0652               	xorwf	sprintf@c,w
   960  0093  1D03               	btfss	3,2
   961  0094  2896               	goto	u691
   962  0095  2897               	goto	u690
   963  0096                     u691:
   964  0096  2871               	goto	l1280
   965  0097                     u690:
   966  0097                     l1286:
   967                           
   968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
   969  0097  084D               	movf	sprintf@flag,w
   970  0098  3903               	andlw	3
   971  0099  1903               	btfsc	3,2
   972  009A  289C               	goto	u701
   973  009B  289D               	goto	u700
   974  009C                     u701:
   975  009C  28A8               	goto	l1292
   976  009D                     u700:
   977  009D                     l1288:
   978                           
   979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
   980  009D  302D               	movlw	45
   981  009E  00C9               	movwf	??_sprintf
   982  009F  0851               	movf	sprintf@sp,w
   983  00A0  0084               	movwf	4
   984  00A1  0849               	movf	??_sprintf,w
   985  00A2  1383               	bcf	3,7	;select IRP bank0
   986  00A3  0080               	movwf	0
   987  00A4                     l1290:
   988  00A4  3001               	movlw	1
   989  00A5  00C9               	movwf	??_sprintf
   990  00A6  0849               	movf	??_sprintf,w
   991  00A7  07D1               	addwf	sprintf@sp,f
   992  00A8                     l1292:
   993                           
   994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
   995  00A8  0852               	movf	sprintf@c,w
   996  00A9  00C9               	movwf	??_sprintf
   997  00AA  0849               	movf	??_sprintf,w
   998  00AB  00CE               	movwf	sprintf@prec
   999                           
  1000                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1001  00AC  28E8               	goto	l1300
  1002  00AD                     l1294:
  1003                           
  1004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1005  00AD  300A               	movlw	10
  1006  00AE  00C1               	movwf	___lwmod@divisor
  1007  00AF  3000               	movlw	0
  1008  00B0  00C2               	movwf	___lwmod@divisor+1
  1009  00B1  084E               	movf	sprintf@prec,w
  1010  00B2  00C9               	movwf	??_sprintf
  1011  00B3  0749               	addwf	??_sprintf,w
  1012  00B4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1013  00B5  0084               	movwf	4
  1014  00B6  120A  118A  2200  120A  118A  	fcall	stringdir
  1015  00BB  00F3               	movwf	___lwdiv@divisor
  1016  00BC  120A  118A  2200  120A  118A  	fcall	stringdir
  1017  00C1  00F4               	movwf	___lwdiv@divisor+1
  1018  00C2  0850               	movf	sprintf@val+1,w
  1019  00C3  00F6               	movwf	___lwdiv@dividend+1
  1020  00C4  084F               	movf	sprintf@val,w
  1021  00C5  00F5               	movwf	___lwdiv@dividend
  1022  00C6  120A  118A  2108  120A  118A  	fcall	___lwdiv
  1023  00CB  0874               	movf	?___lwdiv+1,w
  1024  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1025  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1026  00CE  00C4               	movwf	___lwmod@dividend+1
  1027  00CF  0873               	movf	?___lwdiv,w
  1028  00D0  00C3               	movwf	___lwmod@dividend
  1029  00D1  120A  118A  214E  120A  118A  	fcall	___lwmod
  1030  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1031  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1032  00D8  0841               	movf	?___lwmod,w
  1033  00D9  3E30               	addlw	48
  1034  00DA  00CA               	movwf	??_sprintf+1
  1035  00DB  084A               	movf	??_sprintf+1,w
  1036  00DC  00D2               	movwf	sprintf@c
  1037  00DD                     l1296:
  1038                           
  1039                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1040  00DD  0852               	movf	sprintf@c,w
  1041  00DE  00C9               	movwf	??_sprintf
  1042  00DF  0851               	movf	sprintf@sp,w
  1043  00E0  0084               	movwf	4
  1044  00E1  0849               	movf	??_sprintf,w
  1045  00E2  1383               	bcf	3,7	;select IRP bank0
  1046  00E3  0080               	movwf	0
  1047  00E4                     l1298:
  1048  00E4  3001               	movlw	1
  1049  00E5  00C9               	movwf	??_sprintf
  1050  00E6  0849               	movf	??_sprintf,w
  1051  00E7  07D1               	addwf	sprintf@sp,f
  1052  00E8                     l1300:
  1053                           
  1054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1055  00E8  30FF               	movlw	255
  1056  00E9  00C9               	movwf	??_sprintf
  1057  00EA  0849               	movf	??_sprintf,w
  1058  00EB  07CE               	addwf	sprintf@prec,f
  1059  00EC  0A4E               	incf	sprintf@prec,w
  1060  00ED  1D03               	btfss	3,2
  1061  00EE  28F0               	goto	u711
  1062  00EF  28F1               	goto	u710
  1063  00F0                     u711:
  1064  00F0  28AD               	goto	l1294
  1065  00F1                     u710:
  1066  00F1                     l1302:
  1067                           
  1068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1069  00F1  3001               	movlw	1
  1070  00F2  07C6               	addwf	sprintf@f,f
  1071  00F3  30FF               	movlw	-1
  1072  00F4  0746               	addwf	sprintf@f,w
  1073  00F5  0084               	movwf	4
  1074  00F6  120A  118A  2200  120A  118A  	fcall	stringdir
  1075  00FB  00C9               	movwf	??_sprintf
  1076  00FC  0849               	movf	??_sprintf,w
  1077  00FD  00D2               	movwf	sprintf@c
  1078  00FE  0852               	movf	sprintf@c,w
  1079  00FF  1D03               	btfss	3,2
  1080  0100  2902               	goto	u721
  1081  0101  2903               	goto	u720
  1082  0102                     u721:
  1083  0102  2826               	goto	l1252
  1084  0103                     u720:
  1085  0103                     l1304:
  1086                           
  1087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1088  0103  0851               	movf	sprintf@sp,w
  1089  0104  0084               	movwf	4
  1090  0105  1383               	bcf	3,7	;select IRP bank0
  1091  0106  0180               	clrf	0
  1092  0107                     l232:
  1093  0107  0008               	return
  1094  0108                     __end_of_sprintf:
  1095                           
  1096                           	psect	text3
  1097  014E                     __ptext3:	
  1098 ;; *************** function ___lwmod *****************
  1099 ;; Defined at:
  1100 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;  divisor         2    3[BANK0 ] unsigned int 
  1103 ;;  dividend        2    5[BANK0 ] unsigned int 
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;  counter         1    7[BANK0 ] unsigned char 
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  2    3[BANK0 ] unsigned int 
  1108 ;; Registers used:
  1109 ;;		wreg, status,2, status,0
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1115 ;;      Params:         0       4       0       0       0
  1116 ;;      Locals:         0       1       0       0       0
  1117 ;;      Temps:          1       0       0       0       0
  1118 ;;      Totals:         1       5       0       0       0
  1119 ;;Total ram usage:        6 bytes
  1120 ;; Hardware stack levels used:    1
  1121 ;; Hardware stack levels required when called:    1
  1122 ;; This function calls:
  1123 ;;		Nothing
  1124 ;; This function is called by:
  1125 ;;		_sprintf
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           
  1130                           ;psect for function ___lwmod
  1131  014E                     ___lwmod:
  1132  014E                     l1228:	
  1133                           ;incstack = 0
  1134                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1135                           
  1136  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1137  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0150  0841               	movf	___lwmod@divisor,w
  1139  0151  0442               	iorwf	___lwmod@divisor+1,w
  1140  0152  1903               	btfsc	3,2
  1141  0153  2955               	goto	u601
  1142  0154  2956               	goto	u600
  1143  0155                     u601:
  1144  0155  2985               	goto	l1246
  1145  0156                     u600:
  1146  0156                     l1230:
  1147  0156  01C5               	clrf	___lwmod@counter
  1148  0157  0AC5               	incf	___lwmod@counter,f
  1149  0158  2964               	goto	l1236
  1150  0159                     l1232:
  1151  0159  3001               	movlw	1
  1152  015A                     u615:
  1153  015A  1003               	clrc
  1154  015B  0DC1               	rlf	___lwmod@divisor,f
  1155  015C  0DC2               	rlf	___lwmod@divisor+1,f
  1156  015D  3EFF               	addlw	-1
  1157  015E  1D03               	skipz
  1158  015F  295A               	goto	u615
  1159  0160                     l1234:
  1160  0160  3001               	movlw	1
  1161  0161  00F8               	movwf	??___lwmod
  1162  0162  0878               	movf	??___lwmod,w
  1163  0163  07C5               	addwf	___lwmod@counter,f
  1164  0164                     l1236:
  1165  0164  1FC2               	btfss	___lwmod@divisor+1,7
  1166  0165  2967               	goto	u621
  1167  0166  2968               	goto	u620
  1168  0167                     u621:
  1169  0167  2959               	goto	l1232
  1170  0168                     u620:
  1171  0168                     l1238:
  1172  0168  0842               	movf	___lwmod@divisor+1,w
  1173  0169  0244               	subwf	___lwmod@dividend+1,w
  1174  016A  1D03               	skipz
  1175  016B  296E               	goto	u635
  1176  016C  0841               	movf	___lwmod@divisor,w
  1177  016D  0243               	subwf	___lwmod@dividend,w
  1178  016E                     u635:
  1179  016E  1C03               	skipc
  1180  016F  2971               	goto	u631
  1181  0170  2972               	goto	u630
  1182  0171                     u631:
  1183  0171  2978               	goto	l1242
  1184  0172                     u630:
  1185  0172                     l1240:
  1186  0172  0841               	movf	___lwmod@divisor,w
  1187  0173  02C3               	subwf	___lwmod@dividend,f
  1188  0174  0842               	movf	___lwmod@divisor+1,w
  1189  0175  1C03               	skipc
  1190  0176  03C4               	decf	___lwmod@dividend+1,f
  1191  0177  02C4               	subwf	___lwmod@dividend+1,f
  1192  0178                     l1242:
  1193  0178  3001               	movlw	1
  1194  0179                     u645:
  1195  0179  1003               	clrc
  1196  017A  0CC2               	rrf	___lwmod@divisor+1,f
  1197  017B  0CC1               	rrf	___lwmod@divisor,f
  1198  017C  3EFF               	addlw	-1
  1199  017D  1D03               	skipz
  1200  017E  2979               	goto	u645
  1201  017F                     l1244:
  1202  017F  3001               	movlw	1
  1203  0180  02C5               	subwf	___lwmod@counter,f
  1204  0181  1D03               	btfss	3,2
  1205  0182  2984               	goto	u651
  1206  0183  2985               	goto	u650
  1207  0184                     u651:
  1208  0184  2968               	goto	l1238
  1209  0185                     u650:
  1210  0185                     l1246:
  1211  0185  0844               	movf	___lwmod@dividend+1,w
  1212  0186  00C2               	movwf	?___lwmod+1
  1213  0187  0843               	movf	___lwmod@dividend,w
  1214  0188  00C1               	movwf	?___lwmod
  1215  0189                     l518:
  1216  0189  0008               	return
  1217  018A                     __end_of___lwmod:
  1218                           
  1219                           	psect	text4
  1220  0108                     __ptext4:	
  1221 ;; *************** function ___lwdiv *****************
  1222 ;; Defined at:
  1223 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;  divisor         2    3[COMMON] unsigned int 
  1226 ;;  dividend        2    5[COMMON] unsigned int 
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  quotient        2    1[BANK0 ] unsigned int 
  1229 ;;  counter         1    0[BANK0 ] unsigned char 
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  2    3[COMMON] unsigned int 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1239 ;;      Params:         4       0       0       0       0
  1240 ;;      Locals:         0       3       0       0       0
  1241 ;;      Temps:          1       0       0       0       0
  1242 ;;      Totals:         5       3       0       0       0
  1243 ;;Total ram usage:        8 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; Hardware stack levels required when called:    1
  1246 ;; This function calls:
  1247 ;;		Nothing
  1248 ;; This function is called by:
  1249 ;;		_sprintf
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           
  1254                           ;psect for function ___lwdiv
  1255  0108                     ___lwdiv:
  1256  0108                     l1202:	
  1257                           ;incstack = 0
  1258                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1259                           
  1260  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1261  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1262  010A  01BF               	clrf	___lwdiv@quotient
  1263  010B  01C0               	clrf	___lwdiv@quotient+1
  1264  010C                     l1204:
  1265  010C  0873               	movf	___lwdiv@divisor,w
  1266  010D  0474               	iorwf	___lwdiv@divisor+1,w
  1267  010E  1903               	btfsc	3,2
  1268  010F  2911               	goto	u531
  1269  0110  2912               	goto	u530
  1270  0111                     u531:
  1271  0111  2949               	goto	l1224
  1272  0112                     u530:
  1273  0112                     l1206:
  1274  0112  01BE               	clrf	___lwdiv@counter
  1275  0113  0ABE               	incf	___lwdiv@counter,f
  1276  0114  2920               	goto	l1212
  1277  0115                     l1208:
  1278  0115  3001               	movlw	1
  1279  0116                     u545:
  1280  0116  1003               	clrc
  1281  0117  0DF3               	rlf	___lwdiv@divisor,f
  1282  0118  0DF4               	rlf	___lwdiv@divisor+1,f
  1283  0119  3EFF               	addlw	-1
  1284  011A  1D03               	skipz
  1285  011B  2916               	goto	u545
  1286  011C                     l1210:
  1287  011C  3001               	movlw	1
  1288  011D  00F7               	movwf	??___lwdiv
  1289  011E  0877               	movf	??___lwdiv,w
  1290  011F  07BE               	addwf	___lwdiv@counter,f
  1291  0120                     l1212:
  1292  0120  1FF4               	btfss	___lwdiv@divisor+1,7
  1293  0121  2923               	goto	u551
  1294  0122  2924               	goto	u550
  1295  0123                     u551:
  1296  0123  2915               	goto	l1208
  1297  0124                     u550:
  1298  0124                     l1214:
  1299  0124  3001               	movlw	1
  1300  0125                     u565:
  1301  0125  1003               	clrc
  1302  0126  0DBF               	rlf	___lwdiv@quotient,f
  1303  0127  0DC0               	rlf	___lwdiv@quotient+1,f
  1304  0128  3EFF               	addlw	-1
  1305  0129  1D03               	skipz
  1306  012A  2925               	goto	u565
  1307  012B  0874               	movf	___lwdiv@divisor+1,w
  1308  012C  0276               	subwf	___lwdiv@dividend+1,w
  1309  012D  1D03               	skipz
  1310  012E  2931               	goto	u575
  1311  012F  0873               	movf	___lwdiv@divisor,w
  1312  0130  0275               	subwf	___lwdiv@dividend,w
  1313  0131                     u575:
  1314  0131  1C03               	skipc
  1315  0132  2934               	goto	u571
  1316  0133  2935               	goto	u570
  1317  0134                     u571:
  1318  0134  293C               	goto	l1220
  1319  0135                     u570:
  1320  0135                     l1216:
  1321  0135  0873               	movf	___lwdiv@divisor,w
  1322  0136  02F5               	subwf	___lwdiv@dividend,f
  1323  0137  0874               	movf	___lwdiv@divisor+1,w
  1324  0138  1C03               	skipc
  1325  0139  03F6               	decf	___lwdiv@dividend+1,f
  1326  013A  02F6               	subwf	___lwdiv@dividend+1,f
  1327  013B                     l1218:
  1328  013B  143F               	bsf	___lwdiv@quotient,0
  1329  013C                     l1220:
  1330  013C  3001               	movlw	1
  1331  013D                     u585:
  1332  013D  1003               	clrc
  1333  013E  0CF4               	rrf	___lwdiv@divisor+1,f
  1334  013F  0CF3               	rrf	___lwdiv@divisor,f
  1335  0140  3EFF               	addlw	-1
  1336  0141  1D03               	skipz
  1337  0142  293D               	goto	u585
  1338  0143                     l1222:
  1339  0143  3001               	movlw	1
  1340  0144  02BE               	subwf	___lwdiv@counter,f
  1341  0145  1D03               	btfss	3,2
  1342  0146  2948               	goto	u591
  1343  0147  2949               	goto	u590
  1344  0148                     u591:
  1345  0148  2924               	goto	l1214
  1346  0149                     u590:
  1347  0149                     l1224:
  1348  0149  0840               	movf	___lwdiv@quotient+1,w
  1349  014A  00F4               	movwf	?___lwdiv+1
  1350  014B  083F               	movf	___lwdiv@quotient,w
  1351  014C  00F3               	movwf	?___lwdiv
  1352  014D                     l508:
  1353  014D  0008               	return
  1354  014E                     __end_of___lwdiv:
  1355                           
  1356                           	psect	text5
  1357  0229                     __ptext5:	
  1358 ;; *************** function _cadena_caracteres *****************
  1359 ;; Defined at:
  1360 ;;		line 33 in file "UART5.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  st              1    wreg     PTR unsigned char 
  1363 ;;		 -> s(20), 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  st              1    7[COMMON] PTR unsigned char 
  1366 ;;		 -> s(20), 
  1367 ;;  i               2    5[COMMON] int 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1377 ;;      Params:         0       0       0       0       0
  1378 ;;      Locals:         3       0       0       0       0
  1379 ;;      Temps:          1       0       0       0       0
  1380 ;;      Totals:         4       0       0       0       0
  1381 ;;Total ram usage:        4 bytes
  1382 ;; Hardware stack levels used:    1
  1383 ;; Hardware stack levels required when called:    2
  1384 ;; This function calls:
  1385 ;;		_Envio_caracter
  1386 ;; This function is called by:
  1387 ;;		_valorsensores
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           
  1392                           ;psect for function _cadena_caracteres
  1393  0229                     _cadena_caracteres:
  1394                           
  1395                           ;incstack = 0
  1396                           ; Regs used in _cadena_caracteres: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1397                           ;cadena_caracteres@st stored from wreg
  1398  0229  00F7               	movwf	cadena_caracteres@st
  1399  022A                     l1040:
  1400                           
  1401                           ;UART5.c: 33: void cadena_caracteres(char st[]);UART5.c: 34: {;UART5.c: 35:     int i = 
      +                          0;
  1402  022A  01F5               	clrf	cadena_caracteres@i
  1403  022B  01F6               	clrf	cadena_caracteres@i+1
  1404                           
  1405                           ;UART5.c: 36:     while (st[i] !=0)
  1406  022C  2A3E               	goto	l1046
  1407  022D                     l1042:
  1408                           
  1409                           ;UART5.c: 37:     {;UART5.c: 38:         Envio_caracter(st[i]);
  1410  022D  0875               	movf	cadena_caracteres@i,w
  1411  022E  0777               	addwf	cadena_caracteres@st,w
  1412  022F  00F4               	movwf	??_cadena_caracteres
  1413  0230  0874               	movf	??_cadena_caracteres,w
  1414  0231  0084               	movwf	4
  1415  0232  0800               	movf	0,w
  1416  0233  120A  118A  2299  120A  118A  	fcall	_Envio_caracter
  1417  0238                     l1044:
  1418                           
  1419                           ;UART5.c: 39:         i++;
  1420  0238  3001               	movlw	1
  1421  0239  07F5               	addwf	cadena_caracteres@i,f
  1422  023A  1803               	skipnc
  1423  023B  0AF6               	incf	cadena_caracteres@i+1,f
  1424  023C  3000               	movlw	0
  1425  023D  07F6               	addwf	cadena_caracteres@i+1,f
  1426  023E                     l1046:
  1427                           
  1428                           ;UART5.c: 36:     while (st[i] !=0)
  1429  023E  0875               	movf	cadena_caracteres@i,w
  1430  023F  0777               	addwf	cadena_caracteres@st,w
  1431  0240  00F4               	movwf	??_cadena_caracteres
  1432  0241  0874               	movf	??_cadena_caracteres,w
  1433  0242  0084               	movwf	4
  1434  0243  1383               	bcf	3,7	;select IRP bank0
  1435  0244  0800               	movf	0,w
  1436  0245  1D03               	btfss	3,2
  1437  0246  2A48               	goto	u411
  1438  0247  2A49               	goto	u410
  1439  0248                     u411:
  1440  0248  2A2D               	goto	l1042
  1441  0249                     u410:
  1442  0249                     l116:
  1443  0249  0008               	return
  1444  024A                     __end_of_cadena_caracteres:
  1445                           
  1446                           	psect	text6
  1447  0299                     __ptext6:	
  1448 ;; *************** function _Envio_caracter *****************
  1449 ;; Defined at:
  1450 ;;		line 27 in file "UART5.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  caracter        1    wreg     unsigned char 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;  caracter        1    3[COMMON] unsigned char 
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      void 
  1457 ;; Registers used:
  1458 ;;		wreg
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1464 ;;      Params:         0       0       0       0       0
  1465 ;;      Locals:         1       0       0       0       0
  1466 ;;      Temps:          0       0       0       0       0
  1467 ;;      Totals:         1       0       0       0       0
  1468 ;;Total ram usage:        1 bytes
  1469 ;; Hardware stack levels used:    1
  1470 ;; Hardware stack levels required when called:    1
  1471 ;; This function calls:
  1472 ;;		Nothing
  1473 ;; This function is called by:
  1474 ;;		_cadena_caracteres
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           
  1479                           ;psect for function _Envio_caracter
  1480  0299                     _Envio_caracter:
  1481                           
  1482                           ;incstack = 0
  1483                           ; Regs used in _Envio_caracter: [wreg]
  1484                           ;Envio_caracter@caracter stored from wreg
  1485  0299  00F3               	movwf	Envio_caracter@caracter
  1486  029A                     l972:
  1487  029A                     l107:	
  1488                           ;UART5.c: 27: void Envio_caracter(char caracter);UART5.c: 28: {;UART5.c: 29:     while(!
      +                          TXIF);
  1489                           
  1490  029A  1283               	bcf	3,5	;RP0=0, select bank0
  1491  029B  1303               	bcf	3,6	;RP1=0, select bank0
  1492  029C  1E0C               	btfss	12,4	;volatile
  1493  029D  2A9F               	goto	u271
  1494  029E  2AA0               	goto	u270
  1495  029F                     u271:
  1496  029F  2A9A               	goto	l107
  1497  02A0                     u270:
  1498  02A0                     l974:
  1499                           
  1500                           ;UART5.c: 30:     TXREG = caracter;
  1501  02A0  0873               	movf	Envio_caracter@caracter,w
  1502  02A1  0099               	movwf	25	;volatile
  1503  02A2                     l110:
  1504  02A2  0008               	return
  1505  02A3                     __end_of_Envio_caracter:
  1506                           
  1507                           	psect	text7
  1508  01BD                     __ptext7:	
  1509 ;; *************** function _setup *****************
  1510 ;; Defined at:
  1511 ;;		line 77 in file "Main_Lab5.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;		None
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0, pclath, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1525 ;;      Params:         0       0       0       0       0
  1526 ;;      Locals:         0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0
  1528 ;;      Totals:         0       0       0       0       0
  1529 ;;Total ram usage:        0 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    2
  1532 ;; This function calls:
  1533 ;;		_configuracionUART
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           
  1540                           ;psect for function _setup
  1541  01BD                     _setup:
  1542  01BD                     l1110:	
  1543                           ;incstack = 0
  1544                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1545                           
  1546                           
  1547                           ;Main_Lab5.c: 80:     ANSEL = 0x00;
  1548  01BD  1683               	bsf	3,5	;RP0=1, select bank3
  1549  01BE  1703               	bsf	3,6	;RP1=1, select bank3
  1550  01BF  0188               	clrf	8	;volatile
  1551                           
  1552                           ;Main_Lab5.c: 81:     ANSELH = 0x00;
  1553  01C0  0189               	clrf	9	;volatile
  1554                           
  1555                           ;Main_Lab5.c: 84:     TRISE = 0x00;
  1556  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  1557  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  1558  01C3  0189               	clrf	9	;volatile
  1559                           
  1560                           ;Main_Lab5.c: 85:     TRISA = 0x00;
  1561  01C4  0185               	clrf	5	;volatile
  1562  01C5                     l1112:
  1563                           
  1564                           ;Main_Lab5.c: 86:     TRISB = 0x03;
  1565  01C5  3003               	movlw	3
  1566  01C6  0086               	movwf	6	;volatile
  1567  01C7                     l1114:
  1568                           
  1569                           ;Main_Lab5.c: 87:     TRISD = 0x00;
  1570  01C7  0188               	clrf	8	;volatile
  1571  01C8                     l1116:
  1572                           
  1573                           ;Main_Lab5.c: 88:     OPTION_REGbits.nRBPU = 0;
  1574  01C8  1381               	bcf	1,7	;volatile
  1575                           
  1576                           ;Main_Lab5.c: 89:     WPUB = 0b00000011;
  1577  01C9  3003               	movlw	3
  1578  01CA  0095               	movwf	21	;volatile
  1579  01CB                     l1118:
  1580                           
  1581                           ;Main_Lab5.c: 91:     PORTA = 0x00;
  1582  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1583  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1584  01CD  0185               	clrf	5	;volatile
  1585  01CE                     l1120:
  1586                           
  1587                           ;Main_Lab5.c: 92:     PORTE = 0x00;
  1588  01CE  0189               	clrf	9	;volatile
  1589  01CF                     l1122:
  1590                           
  1591                           ;Main_Lab5.c: 93:     PORTB = 0x00;
  1592  01CF  0186               	clrf	6	;volatile
  1593  01D0                     l1124:
  1594                           
  1595                           ;Main_Lab5.c: 94:     PORTD = 0x00;
  1596  01D0  0188               	clrf	8	;volatile
  1597  01D1                     l1126:
  1598                           
  1599                           ;Main_Lab5.c: 96:     PORTCbits.RC2 = 1;
  1600  01D1  1507               	bsf	7,2	;volatile
  1601  01D2                     l1128:
  1602                           
  1603                           ;Main_Lab5.c: 98:     IOCBbits. IOCB0 = 1;
  1604  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  1605  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  1606  01D4  1416               	bsf	22,0	;volatile
  1607  01D5                     l1130:
  1608                           
  1609                           ;Main_Lab5.c: 99:     IOCBbits. IOCB1 = 1;
  1610  01D5  1496               	bsf	22,1	;volatile
  1611  01D6                     l1132:
  1612                           
  1613                           ;Main_Lab5.c: 101:     OSCCONbits. IRCF2 = 1;
  1614  01D6  170F               	bsf	15,6	;volatile
  1615  01D7                     l1134:
  1616                           
  1617                           ;Main_Lab5.c: 102:     OSCCONbits. IRCF1 = 1;
  1618  01D7  168F               	bsf	15,5	;volatile
  1619  01D8                     l1136:
  1620                           
  1621                           ;Main_Lab5.c: 103:     OSCCONbits. IRCF0 = 0;
  1622  01D8  120F               	bcf	15,4	;volatile
  1623  01D9                     l1138:
  1624                           
  1625                           ;Main_Lab5.c: 104:     OSCCONbits. SCS = 1;
  1626  01D9  140F               	bsf	15,0	;volatile
  1627  01DA                     l1140:
  1628                           
  1629                           ;Main_Lab5.c: 106:     INTCONbits. GIE = 1;
  1630  01DA  178B               	bsf	11,7	;volatile
  1631  01DB                     l1142:
  1632                           
  1633                           ;Main_Lab5.c: 107:     INTCONbits. RBIE = 1;
  1634  01DB  158B               	bsf	11,3	;volatile
  1635  01DC                     l1144:
  1636                           
  1637                           ;Main_Lab5.c: 108:     INTCONbits. RBIF = 0;
  1638  01DC  100B               	bcf	11,0	;volatile
  1639  01DD                     l1146:
  1640                           
  1641                           ;Main_Lab5.c: 109:     INTCONbits.PEIE = 1;
  1642  01DD  170B               	bsf	11,6	;volatile
  1643  01DE                     l1148:
  1644                           
  1645                           ;Main_Lab5.c: 110:     PIE1bits.SSPIE = 1;
  1646  01DE  158C               	bsf	12,3	;volatile
  1647  01DF                     l1150:
  1648                           
  1649                           ;Main_Lab5.c: 111:     PIR1bits.SSPIF = 0;
  1650  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  1651  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  1652  01E1  118C               	bcf	12,3	;volatile
  1653  01E2                     l1152:
  1654                           
  1655                           ;Main_Lab5.c: 114:     configuracionUART();
  1656  01E2  120A  118A  2284  120A  118A  	fcall	_configuracionUART
  1657  01E7                     l82:
  1658  01E7  0008               	return
  1659  01E8                     __end_of_setup:
  1660                           
  1661                           	psect	text8
  1662  0284                     __ptext8:	
  1663 ;; *************** function _configuracionUART *****************
  1664 ;; Defined at:
  1665 ;;		line 43 in file "UART5.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1679 ;;      Params:         0       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0
  1682 ;;      Totals:         0       0       0       0       0
  1683 ;;Total ram usage:        0 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    1
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_setup
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           
  1694                           ;psect for function _configuracionUART
  1695  0284                     _configuracionUART:
  1696  0284                     l1026:	
  1697                           ;incstack = 0
  1698                           ; Regs used in _configuracionUART: [wreg+status,2]
  1699                           
  1700                           
  1701                           ;UART5.c: 45:     TXSTAbits.SYNC = 0;
  1702  0284  1683               	bsf	3,5	;RP0=1, select bank1
  1703  0285  1303               	bcf	3,6	;RP1=0, select bank1
  1704  0286  1218               	bcf	24,4	;volatile
  1705                           
  1706                           ;UART5.c: 46:     TXSTAbits.BRGH = 1;
  1707  0287  1518               	bsf	24,2	;volatile
  1708                           
  1709                           ;UART5.c: 47:     BAUDCTLbits.BRG16 = 0;
  1710  0288  1683               	bsf	3,5	;RP0=1, select bank3
  1711  0289  1703               	bsf	3,6	;RP1=1, select bank3
  1712  028A  1187               	bcf	7,3	;volatile
  1713  028B                     l1028:
  1714                           
  1715                           ;UART5.c: 49:     SPBRG = 25;
  1716  028B  3019               	movlw	25
  1717  028C  1683               	bsf	3,5	;RP0=1, select bank1
  1718  028D  1303               	bcf	3,6	;RP1=0, select bank1
  1719  028E  0099               	movwf	25	;volatile
  1720  028F                     l1030:
  1721                           
  1722                           ;UART5.c: 50:     SPBRGH = 0;
  1723  028F  019A               	clrf	26	;volatile
  1724  0290                     l1032:
  1725                           
  1726                           ;UART5.c: 52:     RCSTAbits.SPEN = 1;
  1727  0290  1283               	bcf	3,5	;RP0=0, select bank0
  1728  0291  1303               	bcf	3,6	;RP1=0, select bank0
  1729  0292  1798               	bsf	24,7	;volatile
  1730  0293                     l1034:
  1731                           
  1732                           ;UART5.c: 53:     RCSTAbits.RX9 = 0;
  1733  0293  1318               	bcf	24,6	;volatile
  1734  0294                     l1036:
  1735                           
  1736                           ;UART5.c: 54:     RCSTAbits.CREN = 1;
  1737  0294  1618               	bsf	24,4	;volatile
  1738  0295                     l1038:
  1739                           
  1740                           ;UART5.c: 56:     TXSTAbits.TXEN = 1;
  1741  0295  1683               	bsf	3,5	;RP0=1, select bank1
  1742  0296  1303               	bcf	3,6	;RP1=0, select bank1
  1743  0297  1698               	bsf	24,5	;volatile
  1744  0298                     l119:
  1745  0298  0008               	return
  1746  0299                     __end_of_configuracionUART:
  1747                           
  1748                           	psect	text9
  1749  024A                     __ptext9:	
  1750 ;; *************** function _isr *****************
  1751 ;; Defined at:
  1752 ;;		line 44 in file "Main_Lab5.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;		None
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;		None
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2, status,0
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1766 ;;      Params:         0       0       0       0       0
  1767 ;;      Locals:         0       0       0       0       0
  1768 ;;      Temps:          3       0       0       0       0
  1769 ;;      Totals:         3       0       0       0       0
  1770 ;;Total ram usage:        3 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		Interrupt level 1
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           
  1780                           ;psect for function _isr
  1781  024A                     _isr:
  1782  024A                     i1l1160:
  1783                           
  1784                           ;Main_Lab5.c: 46: if(RBIF == 1)
  1785  024A  1C0B               	btfss	11,0	;volatile
  1786  024B  2A4D               	goto	u49_21
  1787  024C  2A4E               	goto	u49_20
  1788  024D                     u49_21:
  1789  024D  2A62               	goto	i1l1172
  1790  024E                     u49_20:
  1791  024E                     i1l1162:
  1792                           
  1793                           ;Main_Lab5.c: 47:     {;Main_Lab5.c: 48:     Cont=PORTD;
  1794  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1795  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1796  0250  0808               	movf	8,w	;volatile
  1797  0251  00F0               	movwf	??_isr
  1798  0252  0870               	movf	??_isr,w
  1799  0253  00A8               	movwf	_Cont
  1800  0254                     i1l1164:
  1801                           
  1802                           ;Main_Lab5.c: 49:         if(RB0 == 0)
  1803  0254  1806               	btfsc	6,0	;volatile
  1804  0255  2A57               	goto	u50_21
  1805  0256  2A58               	goto	u50_20
  1806  0257                     u50_21:
  1807  0257  2A5C               	goto	i1l1168
  1808  0258                     u50_20:
  1809  0258                     i1l1166:
  1810                           
  1811                           ;Main_Lab5.c: 50:         {;Main_Lab5.c: 51:             PORTD++;
  1812  0258  3001               	movlw	1
  1813  0259  00F0               	movwf	??_isr
  1814  025A  0870               	movf	??_isr,w
  1815  025B  0788               	addwf	8,f	;volatile
  1816  025C                     i1l1168:
  1817                           
  1818                           ;Main_Lab5.c: 53:         if(RB1 == 0)
  1819  025C  1886               	btfsc	6,1	;volatile
  1820  025D  2A5F               	goto	u51_21
  1821  025E  2A60               	goto	u51_20
  1822  025F                     u51_21:
  1823  025F  2A62               	goto	i1l1172
  1824  0260                     u51_20:
  1825  0260                     i1l1170:
  1826                           
  1827                           ;Main_Lab5.c: 54:         {;Main_Lab5.c: 55:             PORTD--;
  1828  0260  3001               	movlw	1
  1829  0261  0288               	subwf	8,f	;volatile
  1830  0262                     i1l1172:
  1831                           
  1832                           ;Main_Lab5.c: 58:     INTCONbits.RBIF = 0;
  1833  0262  100B               	bcf	11,0	;volatile
  1834  0263                     i1l70:
  1835  0263  0872               	movf	??_isr+2,w
  1836  0264  008A               	movwf	10
  1837  0265  0E71               	swapf	??_isr+1,w
  1838  0266  0083               	movwf	3
  1839  0267  0EFE               	swapf	btemp,f
  1840  0268  0E7E               	swapf	btemp,w
  1841  0269  0009               	retfie
  1842  026A                     __end_of_isr:
  1843  007E                     btemp	set	126	;btemp
  1844  007E                     wtemp0	set	126
  1845                           
  1846                           	psect	intentry
  1847  0004                     __pintentry:	
  1848                           ;incstack = 0
  1849                           ; Regs used in _isr: [wreg+status,2+status,0]
  1850                           
  1851  0004                     interrupt_function:
  1852  007E                     saved_w	set	btemp
  1853  0004  00FE               	movwf	btemp
  1854  0005  0E03               	swapf	3,w
  1855  0006  00F1               	movwf	??_isr+1
  1856  0007  080A               	movf	10,w
  1857  0008  00F2               	movwf	??_isr+2
  1858  0009  120A  118A  2A4A   	ljmp	_isr
  1859                           
  1860                           	psect	config
  1861                           
  1862                           ;Config register CONFIG1 @ 0x2007
  1863                           ;	Oscillator Selection bits
  1864                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1865                           ;	Watchdog Timer Enable bit
  1866                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1867                           ;	Power-up Timer Enable bit
  1868                           ;	PWRTE = OFF, PWRT disabled
  1869                           ;	RE3/MCLR pin function select bit
  1870                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1871                           ;	Code Protection bit
  1872                           ;	CP = OFF, Program memory code protection is disabled
  1873                           ;	Data Code Protection bit
  1874                           ;	CPD = OFF, Data memory code protection is disabled
  1875                           ;	Brown Out Reset Selection bits
  1876                           ;	BOREN = OFF, BOR disabled
  1877                           ;	Internal External Switchover bit
  1878                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1879                           ;	Fail-Safe Clock Monitor Enabled bit
  1880                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1881                           ;	Low Voltage Programming Enable bit
  1882                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1883                           ;	In-Circuit Debugger Mode bit
  1884                           ;	DEBUG = 0x1, unprogrammed default
  1885  2007                     	org	8199
  1886  2007  20D4               	dw	8404
  1887                           
  1888                           ;Config register CONFIG2 @ 0x2008
  1889                           ;	Brown-out Reset Selection bit
  1890                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1891                           ;	Flash Program Memory Self Write Enable bits
  1892                           ;	WRT = OFF, Write protection off
  1893  2008                     	org	8200
  1894  2008  3FFF               	dw	16383

Data Sizes:
    Strings     25
    Constant    10
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     25      55
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[10]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    cadena_caracteres@st	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK0[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _cadena_caracteres->_Envio_caracter

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_valorsensores
    _valorsensores->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1959
                                             24 BANK0      1     1      0
                              _setup
                      _valorsensores
 ---------------------------------------------------------------------------------
 (1) _valorsensores                                        3     3      0    1959
                                             21 BANK0      3     3      0
                  _cadena_caracteres
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1781
                                              8 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              8 COMMON     1     1      0
                                              3 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _cadena_caracteres                                    4     4      0     178
                                              4 COMMON     4     4      0
                     _Envio_caracter
 ---------------------------------------------------------------------------------
 (3) _Envio_caracter                                       1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                  _configuracionUART
 ---------------------------------------------------------------------------------
 (2) _configuracionUART                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _configuracionUART
   _valorsensores
     _cadena_caracteres
       _Envio_caracter
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      42       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      37       5       68.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      42      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Aug 19 00:09:03 2021

                         _s 002A                           pc 0002                          l82 01E7  
                        _V1 0024                          _V2 0020                          _PC 0029  
                        _Cm 0079                          fsr 0004                         l110 02A2  
                       l122 01BC                         l107 029A                         l116 0249  
                       l119 0298                         l232 0107                         l508 014D  
                       l518 0189                         l972 029A                         l974 02A0  
                       _RB0 0030                         _RB1 0031                         u410 0249  
                       u411 0248                         u270 02A0                         u271 029F  
                       u600 0156                         u601 0155                         u530 0112  
                       u531 0111                         u620 0168                         u700 009D  
                       u621 0167                         u701 009C                         u550 0124  
                       u630 0172                         u710 00F1                         u551 0123  
                       u631 0171                         u615 015A                         u711 00F0  
                       u720 0103                         u545 0116                         u721 0102  
                       u570 0135                         u650 0185                         u730 0275  
                       u571 0134                         u651 0184                         u635 016E  
                       u731 0274                         u660 002C                         u565 0125  
                       u645 0179                         u661 002B                         u590 0149  
                       u670 0066                         u591 0148                         u575 0131  
                       u671 0065                         u680 008C                         u585 013D  
                       u681 008B                         u690 0097                         u691 0096  
                       u685 0088                         _isr 024A                         fsr0 0004  
                       indf 0000                        l1030 028F                        l1110 01BD  
                      l1032 0290                        l1120 01CE                        l1112 01C5  
                      l1040 022A                        l1034 0293                        l1026 0284  
                      l1130 01D5                        l1122 01CF                        l1114 01C7  
                      l1042 022D                        l1210 011C                        l1202 0108  
                      l1036 0294                        l1028 028B                        l1140 01DA  
                      l1132 01D6                        l1124 01D0                        l1116 01C8  
                      l1044 0238                        l1220 013C                        l1212 0120  
                      l1204 010C                        l1300 00E8                        l1038 0295  
                      l1150 01DF                        l1142 01DB                        l1134 01D7  
                      l1126 01D1                        l1118 01CB                        l1046 023E  
                      l1222 0143                        l1214 0124                        l1206 0112  
                      l1230 0156                        l1302 00F1                        l1152 01E2  
                      l1144 01DC                        l1136 01D8                        l1128 01D2  
                      l1216 0135                        l1208 0115                        l1224 0149  
                      l1240 0172                        l1232 0159                        l1304 0103  
                      l1312 018A                        l1320 026F                        l1146 01DD  
                      l1138 01D9                        l1218 013B                        l1242 0178  
                      l1234 0160                        l1250 0021                        l1314 019D  
                      l1322 0275                        l1148 01DE                        l1244 017F  
                      l1236 0164                        l1228 014E                        l1252 0026  
                      l1316 01A3                        l1324 027B                        l1238 0168  
                      l1246 0185                        l1270 0066                        l1262 0039  
                      l1254 002C                        l1318 026A                        l1280 0071  
                      l1272 006A                        l1264 0056                        l1256 0033  
                      l1290 00A4                        l1274 006F                        l1266 005E  
                      l1346 004B                        l1258 0038                        l1292 00A8  
                      l1284 008D                        l1268 0062                        l1294 00AD  
                      l1286 0097                        l1296 00DD                        l1288 009D  
                      l1298 00E4                        ?_isr 0070                        STR_1 0210  
                      STR_2 021F                        _RBIF 0058                        i1l70 0263  
           ??_valorsensores 0053                        _TXIF 0064                        _WPUB 0095  
                      _Cont 0028                        _main 026A                        btemp 007E  
                      start 000C              _Envio_caracter 0299                       ??_isr 0070  
                     ?_main 0070                       _ANSEL 0188             __end_of___lwdiv 014E  
           __end_of___lwmod 018A                       _RCREG 001A                       u50_20 0258  
                     u50_21 0257                       _SPBRG 0099                       u51_20 0260  
                     u51_21 025F                       _PORTA 0005                       _PORTB 0006  
                     _PORTD 0008                       _PORTE 0009                       u49_20 024E  
                     u49_21 024D                       _TRISA 0085                       _TRISB 0086  
                     _TRISD 0088                       _TRISE 0089                       _TXREG 0019  
           __end_of_dpowers 0210                       _setup 01BD                       pclath 000A  
                     status 0003      __end_of_Envio_caracter 02A3                       wtemp0 007E  
           __end_of_sprintf 0108             __initialization 000F                __end_of_main 0284  
                    ??_main 0056                      ?_setup 0070                      _ANSELH 0189  
                    i1l1160 024A                      i1l1170 0260                      i1l1162 024E  
                    i1l1164 0254                      i1l1172 0262                      i1l1166 0258  
                    i1l1168 025C                      _SPBRGH 009A             ?_Envio_caracter 0070  
         _configuracionUART 0284                   ??___lwdiv 0077                   ??___lwmod 0078  
        ?_configuracionUART 0070         ??_configuracionUART 0073                      saved_w 007E  
                 ??_sprintf 0049     __end_of__initialization 001A   __end_of_configuracionUART 0299  
            __pcstackCOMMON 0070               __end_of_setup 01E8              _OPTION_REGbits 0081  
                   ??_setup 0073                  __pbssBANK0 0020                  __pmaintext 026A  
                __pintentry 0004                  __stringtab 0200       __end_of_valorsensores 01BD  
__size_of_configuracionUART 0015          cadena_caracteres@i 0075                     ___lwdiv 0108  
                   ___lwmod 014E                     __ptext1 018A                     __ptext2 001E  
                   __ptext3 014E                     __ptext4 0108                     __ptext5 0229  
                   __ptext6 0299                     __ptext7 01BD                     __ptext8 0284  
                   __ptext9 024A                     _dpowers 0206                __size_of_isr 0020  
          ??_Envio_caracter 0073                     _sprintf 001E           _cadena_caracteres 0229  
                   clrloop0 02A4        end_of_initialization 001A          ?_cadena_caracteres 0070  
       ??_cadena_caracteres 0074                   _RCSTAbits 0018                   _PORTCbits 0007  
 __end_of_cadena_caracteres 024A                   _TXSTAbits 0098                 _BAUDCTLbits 0187  
       start_initialization 000F                 __end_of_isr 026A                 __pbssCOMMON 0079  
                 ___latbits 0002               __pcstackBANK0 003E  __size_of_cadena_caracteres 0021  
               sprintf@flag 004D                 sprintf@prec 004E            ___lwdiv@dividend 0075  
    Envio_caracter@caracter 0073                    ?___lwdiv 0073                    ?___lwmod 0041  
                 __pstrings 0200            ___lwdiv@quotient 003F                    ?_sprintf 0046  
            __size_of_setup 002B           interrupt_function 0004                    _IOCBbits 0096  
                 clear_ram0 02A3                    _PIE1bits 008C                    _PIR1bits 000C  
               __stringbase 0205      __size_of_valorsensores 0033         cadena_caracteres@st 0077  
          __size_of___lwdiv 0046            __size_of___lwmod 003C          __end_of__stringtab 0206  
                sprintf@val 004F             ___lwdiv@divisor 0073             ___lwdiv@counter 003E  
          __size_of_sprintf 00EA               __size_of_main 001A               _valorsensores 018A  
   __size_of_Envio_caracter 000A                  _INTCONbits 000B                    intlevel1 0000  
                 sprintf@ap 004C                   sprintf@sp 0051            ___lwmod@dividend 0043  
            ?_valorsensores 0070                   stringcode 0200                  _OSCCONbits 008F  
                  sprintf@c 0052                    sprintf@f 0046             ___lwmod@divisor 0041  
           ___lwmod@counter 0045                    stringdir 0200                    stringtab 0200  
